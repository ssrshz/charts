apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "openvpn.fullname" . }}
  labels:
    app: {{ template "openvpn.name" . }}
    chart: {{ template "openvpn.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  setup-certs.sh: |-
    #!/bin/bash
    EASY_RSA_LOC="/etc/openvpn/certs"
    SERVER_CERT="${EASY_RSA_LOC}/pki/issued/server.crt"
    if [ -e "$SERVER_CERT" ]
    then
      echo "found existing certs - reusing"
    else
      cp -R /usr/share/easy-rsa/* $EASY_RSA_LOC
      cd $EASY_RSA_LOC
      ./easyrsa init-pki
      echo "ca\n" | ./easyrsa build-ca nopass
      ./easyrsa build-server-full server nopass
      ./easyrsa gen-dh
    fi


  newClientCert.sh: |-
      #!/bin/bash
      EASY_RSA_LOC="/etc/openvpn/certs"
      cd $EASY_RSA_LOC
      MY_IP_ADDR="$2"
      ./easyrsa build-client-full $1 nopass
      cat >${EASY_RSA_LOC}/pki/$1.ovpn <<EOF
      client
      nobind
      dev tun
      remote ${MY_IP_ADDR} {{ .Values.service.externalPort }} {{ .Values.openvpn.OVPN_PROTO }}
      {{- if .Values.openvpn.redirectGateway }}
      redirect-gateway def1
      {{- end }}
      <key>
      `cat ${EASY_RSA_LOC}/pki/private/$1.key`
      </key>
      <cert>
      `cat ${EASY_RSA_LOC}/pki/issued/$1.crt`
      </cert>
      <ca>
      `cat ${EASY_RSA_LOC}/pki/ca.crt`
      </ca>
      EOF
      cat pki/$1.ovpn

  configure.sh: |-
      #!/bin/sh
      /etc/openvpn/setup/setup-certs.sh
      iptables -t nat -A POSTROUTING -s {{ .Values.openvpn.OVPN_NETWORK }}/{{ .Values.openvpn.OVPN_SUBNET }} -o eth0 -j MASQUERADE
      mkdir -p /dev/net
      if [ ! -c /dev/net/tun ]; then
          mknod /dev/net/tun c 10 200
      fi

      if [ "$DEBUG" == "1" ]; then
          echo ========== ${OVPN_CONFIG} ==========
          cat "${OVPN_CONFIG}"
          echo ====================================
      fi
      IP=$(ip route get 8.8.8.8 | awk '/8.8.8.8/ {print $NF}')
      BASEIP=`echo $IP | cut -d"." -f1-3`
      NETWORK=`echo $BASEIP".0"`
      DNS=$(cat /etc/resolv.conf | grep -v '^#' | grep nameserver | awk '{print $2}')
      SEARCH=$(cat /etc/resolv.conf | grep -v '^#' | grep search | awk '{$1=""; print $0}')
      FORMATTED_SEARCH=""
      for DOMAIN in $SEARCH; do
        FORMATTED_SEARCH="${FORMATTED_SEARCH}push \"dhcp-option DOMAIN-SEARCH ${DOMAIN}\"\n"
      done
      cp -f /etc/openvpn/setup/openvpn.conf /etc/openvpn/
      cp -f /etc/openvpn/setup/ldap.conf /etc/openvpn/
      sed 's|OVPN_K8S_SEARCH|'"${FORMATTED_SEARCH}"'|' -i /etc/openvpn/openvpn.conf
      sed 's|OVPN_K8S_DNS|'"${DNS}"'|' -i /etc/openvpn/openvpn.conf
      sed 's|NETWORK|'"${NETWORK}"'|' -i /etc/openvpn/openvpn.conf

      openvpn --config /etc/openvpn/openvpn.conf
  openvpn.conf: |-
      server {{ .Values.openvpn.OVPN_NETWORK }} {{ .Values.openvpn.OVPN_SUBNET }}
      verb 3
      key /etc/openvpn/certs/pki/private/server.key
      ca /etc/openvpn/certs/pki/ca.crt
      cert /etc/openvpn/certs/pki/issued/server.crt
      dh /etc/openvpn/certs/pki/dh.pem

      key-direction 0
      keepalive 10 60
      persist-key
      persist-tun

      proto {{ .Values.openvpn.OVPN_PROTO }}
      port  {{ .Values.service.internalPort }}
      dev tun0
      status /tmp/openvpn-status.log
      
      plugin /usr/lib/openvpn-auth-ldap.so "/etc/openvpn/ldap.conf cn=%u" 
      client-cert-not-required
      # 不需要客户端提供证书
      username-as-common-name
      # username作为cn
      client-to-client

      user nobody
      group nogroup

      push "route NETWORK 255.255.240.0"
{{ if (.Values.openvpn.OVPN_K8S_POD_NETWORK) (.Values.openvpn.OVPN_K8S_POD_SUBNET) }}
      push "route {{ .Values.openvpn.OVPN_K8S_POD_NETWORK }} {{ .Values.openvpn.OVPN_K8S_POD_SUBNET }}"
{{ end }}
{{ if (.Values.openvpn.OVPN_K8S_SVC_NETWORK) (.Values.openvpn.OVPN_K8S_SVC_SUBNET) }}
      push "route {{ .Values.openvpn.OVPN_K8S_SVC_NETWORK }} {{ .Values.openvpn.OVPN_K8S_SVC_SUBNET }}"
{{ end }}

{{ if .Values.openvpn.dhcpOptionDomain }}
      OVPN_K8S_SEARCH
{{ end }}
      push "dhcp-option DNS OVPN_K8S_DNS"

      {{- if .Values.openvpn.conf }}
{{ indent 6 .Values.openvpn.conf }}
      {{- end -}}


  ldap.conf: |-
    <LDAP>
    # LDAP server URL
    # 更改为AD服务器的ip
    URL     ldap://10.230.5.50
    # Bind DN (If your LDAP server doesn't support anonymous binds)
    # BindDN        uid=Manager,ou=People,dc=example,dc=com
    # 更改为域管理的dn,可以通过ldapsearch进行查询,-h的ip替换为服务器ip，-d换为管理员的dn，-b为基础的查询dn，*为所有
    #ldapsearch -LLL -x -h 172.16.76.238 -D "administrator@xx.com" -W -b "dc=xx,dc=com" "*"
    BindDN      DC=RFDOA,DC=CN
    # Bind Password
    # Password  SecretPassword
    #域管理员的密码
    Password    123
    # Network timeout (in seconds)
    Timeout     15
    # Enable Start TLS
    TLSEnable   no
    # Follow LDAP Referrals (anonymously)
    #FollowReferrals yes
    # TLS CA Certificate File
    #TLSCACertFile  ca.crt
    # TLS CA Certificate Directory
    #TLSCACertDir   /etc/ssl/certs
    # Client Certificate and key
    # If TLS client authentication is required
    #TLSCertFile    /usr/local/etc/ssl/client-cert.pem
    #TLSKeyFile /usr/local/etc/ssl/client-key.pem
    # Cipher Suite
    # The defaults are usually fine here
    # TLSCipherSuite    ALL:!ADH:@STRENGTH
    </LDAP>
    <Authorization>
    # Base DN
    # 查询认证的基础dn
    BaseDN      "DC=RFDOA,DC=CN"
    # User Search Filter
    #SearchFilter   "(&(uid=%u)(accountStatus=active))"
    # 其中sAMAccountName=%u的意思是把sAMAccountName的字段取值为用户名，后面“memberof=CN=myvpn,DC=xx,DC=com”指向要认证的vpn用户组，这样任何用户使用vpn，只要加入这个组就好了
    #SearchFilter    "(&(sAMAccountName=%u)(memberof=CN=myvpn,OU=IXMSOFTLDAP,DC=ixmsoft,DC=com)"
    SearchFilter    "(&(sAMAccountName=%u))"
    # Require Group Membership
    RequireGroup    false
    # Add non-group members to a PF table (disabled)
    #PFTable    ips_vpn_users
    <Group>
        #BaseDN     "ou=Groups,dc=example,dc=com"
        #SearchFilter   "(|(cn=developers)(cn=artists))"
        #MemberAttribute    uniqueMember
        # Add group members to a PF table (disabled)
        #PFTable    ips_vpn_eng
        BaseDN      "OU=Security_Groups,DC=RFDOA,DC=CN"
        SearchFilter    "(|(CN=Office_vpn_list))"
        MemberAttribute     "member"
    </Group>
    </Authorization>
